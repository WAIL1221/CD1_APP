version: '3.8'
services:
  backend:
    image: wailhadad1221/project_image:backend-latest
    build:
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - ./api:/var/www
    depends_on:
      - db
    env_file:
      - api/.env
    command: >
      bash -c "composer install &&
               php artisan key:generate &&
               php artisan migrate &&
               php artisan db:seed &&
               php artisan serve --host=0.0.0.0 --port=8000"
    ports:
      - "8000:8000"

  frontend:
    image: wailhadad1221/project_image:frontend-latest
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    command: npm run serve
    ports:
      - "8080:8080"
    depends_on:
      - backend
      - db

  nginx:
    image: nginx:stable-alpine
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/ssl/certs:ro
      - ./nginx/private:/etc/ssl/private:ro
    depends_on:
      - frontend
      - backend

  db:
    image: wailhadad1221/project_image:postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: myapp
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata:/var/lib/postgresql/data

  pgadmin:
    image: wailhadad1221/project_image:pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: wailw2445@gmail.com
      PGADMIN_DEFAULT_PASSWORD: 123
    ports:
      - "5050:80"

volumes:
  pgdata:
